name: PR Check

on:
  pull_request:
    paths:
      - 'data.yml'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  validate-yaml:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository manually
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Clone the repository manually to avoid checkout issues with forks
          git clone https://github.com/${{ github.repository }}.git repo
          cd repo
          git fetch origin pull/${{ github.event.pull_request.number }}/head:pr-${{ github.event.pull_request.number }}
          git checkout pr-${{ github.event.pull_request.number }}

      - name: Run yamllint
        id: lint
        run: |
          cd repo
          pip install yamllint
          yamllint -f github data.yml > yamllint-output.txt || true  

      - name: Check for errors
        id: check_errors
        run: |
          cd repo
          if [ -s yamllint-output.txt ]; then
            echo "has_errors=true" >> $GITHUB_ENV
            sed -e 's/::group::.*//g' -e 's/::error.*:://g' -e 's/::endgroup:://g' yamllint-output.txt > cleaned-yamllint-output.txt
            awk -F: 'NF > 1 {printf "Line %s, Column %s: ", $1, $2; for(i=3; i<=NF; i++) printf "%s", $i; print ""}' cleaned-yamllint-output.txt > formatted-yamllint-output.txt
            echo "YAMLLINT_OUTPUT<<EOF" >> $GITHUB_ENV
            cat formatted-yamllint-output.txt >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Comment on PR
        if: env.has_errors == 'true'
        run: |
          COMMENT_BODY="### Linting failed with the following error.

          \`\`\`
          ${{ env.YAMLLINT_OUTPUT }}
          \`\`\`

          Please fix the above errors."
          
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            -d "{\"body\": $(echo "$COMMENT_BODY" | jq -Rs .)}"

      - name: Approve PR
        if: env.has_errors != 'true'
        run: |
          COMMENT_BODY="Valid data.yml, Approving PR"
          
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            -d "{\"body\": $(echo "$COMMENT_BODY" | jq -Rs .)}"
